on:
  workflow_call:
    inputs:
      godot_cpp_version:
        required: true
        type: string

      steamworks_sdk_tag:
        required: true
        type: string

    secrets:
      steamworks_sdk_repo:
        required: true

      steamworks_sdk_repo_token:
        required: true


jobs:
  build-linux:
    runs-on: ubuntu-latest


    name: Linux ${{ matrix.name }}


    strategy:
      fail-fast: false
      matrix:
        include:
          - name: 64-bit Templates
            cache-name: linux64
            arch: x86_64
            toolchain: "x86_64-godot-linux-gnu_sdk-buildroot"
            steam-redist-bin: linux64/
          - name: 32-bit Templates
            cache-name: linux32
            arch: x86_32
            toolchain: "i686-godot-linux-gnu_sdk-buildroot"
            steam-redist-bin: linux32/


    steps:
      - uses: actions/checkout@v4

      # Checkout GodotSteam
      - name: Checkout GodotSteam
        uses: actions/checkout@v4
        with:
          submodules: true

      # Download Godot-CPP to start
      - name: Download Godot-CPP
        uses: ./.github/actions/download-godot
        with:
          version: ${{ inputs.godot_cpp_version }}

      # Download Steamworks SDK
      - name: Download Steamworks SDK
        uses: ./.github/actions/download-steamworks
        with:
          path: "steamworks"
          repository: ${{ secrets.steamworks_sdk_repo }}
          token: ${{ secrets.steamworks_sdk_repo_token }}
          ref: ${{ inputs.steamworks_sdk_tag }}

      - name: Install gcc-multilib
        if: ${{ startsWith(matrix.arch, 'x86_32') }}
        shell: sh
        run: |
          sudo apt-get update
          sudo apt install gcc-multilib g++-multilib

      # Setting up the Linux buildroot for older versions
      - name: Setup Linux Buildroot
        uses: ./.github/actions/prep-buildroot
        with:
          toolchain-name: ${{ matrix.toolchain }}
          arch: ${{ matrix.arch }}

      # Get that cache money
      - name: Setup Build Cache
        uses: ./.github/actions/setup-cache
        with:
          cache-name: ${{ matrix.cache-name }}
          godot-base: ${{ inputs.godot_cpp_version }}
        continue-on-error: true

      # Setup Python and SCONS
      - name: Setup Python and SCONS
        uses: ./.github/actions/setup-dependencies

      # Compiling templates
      - name: Debug Template Compilation (target=template_debug)
        uses: ./.github/actions/build-godot
        with:
          buildroot: "${{ github.workspace }}/x86_64-godot-linux-gnu_sdk-buildroot/bin"
          arch: ${{ matrix.arch }}
          platform: linuxbsd
          target: template_debug

      - name: Upload Debug Template
        uses: ./.github/actions/upload-artifact
        with:
          name: ${{ matrix.cache-name }}-debug-template
          path: ./bin/libgodotsteam.linux.template_debug.x86_64.so

      - name: Release Template Compilation (target=template_release)
        uses: ./.github/actions/build-godot
        with:
          buildroot: "${{ github.workspace }}/x86_64-godot-linux-gnu_sdk-buildroot/bin"
          arch: ${{ matrix.arch }}
          platform: linuxbsd
          target: template_release

      - name: Upload Release Template
        uses: ./.github/actions/upload-artifact
        with:
          name: ${{ matrix.cache-name }}-release-template
          path: ./bin/libgodotsteam.linux.template_release.x86_64.so

      - name: Clear bin
        run: |
          rm -rf bin

      # Upload the Steam redistributable for packaging
      - name: Upload Linux Steam File
        uses: ./.github/actions/upload-steam-redistributable
        with:
          name: ${{ matrix.cache-name }}-steam
          path: ${{ matrix.steam-redist-bin }}
          redist: libsteam_api.so