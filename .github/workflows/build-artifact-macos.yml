on:
  workflow_call:
    inputs:
      godot_tag:
        required: true
        type: string
      godot_version:
        required: true
        type: string
      steamworks_sdk_tag:
        required: true
        type: string
    secrets:
      steamworks_sdk_repo:
        required: true
      steamworks_sdk_repo_token:
        required: true


jobs:
  build-macos:
    runs-on: macos-latest

    name: Mac ${{ matrix.name }}

    env:
      SCONSFLAGS:
      STRIP: "strip -u -r"

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Editor and Templates
            cache-name: macos

    steps:
      - uses: actions/checkout@v4

      # Download Godot to start
      - name: Download Godot
        uses: ./.github/actions/download-godot
        with:
          version: ${{ inputs.godot_tag }}

      # Download GodotSteam
      - name: Download GodotSteam
        uses: ./.github/actions/download-godotsteam

      # Download Steamworks SDK
      - name: Download Steamworks SDK
        uses: ./.github/actions/download-steamworks
        with:
          path: "steamworks"
          repository: ${{ secrets.steamworks_sdk_repo }}
          token: ${{ secrets.steamworks_sdk_repo_token }}
          ref: ${{ inputs.steamworks_sdk_tag }}

      # Download GodotSteam Multiplayer Peer
      - name: Download GodotSteam Multiplayer Peer
        uses: ./.github/actions/download-godotsteam-multiplayer
        with:
          path: "godotsteammultiplayer"

      # Download and install Vulkan
      - name: Download Vulkan SDK
        uses: ./.github/actions/download-vulkan

      # Get that cache money
      - name: Setup Build Cache
        uses: ./.github/actions/setup-cache
        with:
          cache-name: ${{ matrix.cache-name }}
          godot-base: inputs.godot_tag
        continue-on-error: true

      # Setup Python and SCONS
      - name: Setup Python and SCONS
        uses: ./.github/actions/setup-dependencies

      # Compiling editors
      - name: Editor compilation (arch=x86_64)
        uses: ./.github/actions/build-godot
        with:
          sconsflags: ${{ env.SCONSFLAGS }} ${{ matrix.sconsflags }} arch=x86_64
          platform: macos
          target: editor

      - name: Editor Compilation (arch=arm64)
        uses: ./.github/actions/build-godot
        with:
          sconsflags: ${{ env.SCONSFLAGS }} ${{ matrix.sconsflags }} arch=arm64
          platform: macos
          target: editor

      # Create Mac Universal package
      - name: Package Editor (arch=arm64, x86_64)
        run: |
          ls -l bin/
          lipo -create bin/godot.macos.editor.x86_64 \
            bin/godot.macos.editor.arm64 \
            -output bin/godot.macos.editor.universal
          $STRIP bin/godot.macos.editor.universal
          cp -r misc/dist/macos_tools.app ./GodotSteam.app
          mkdir -p bin/GodotSteam.app/Contents/MacOS
          cp bin/godot.macos.editor.universal bin/GodotSteam.app/Contents/MacOS/GodotSteam
          chmod +x bin/GodotSteam.app/Contents/MacOS/GodotSteam
          ls -l bin/

      - name: Upload Editor
        uses: ./.github/actions/upload-artifact
        with:
          name: ${{ matrix.cache-name }}-editor
          path: bin/GodotSteam.app

      - name: Clear bin
        run: |
          rm -rf bin

      # Compiling templates
      - name: Debug Template Compilation (arch=x86_64, target=template_debug)
        uses: ./.github/actions/build-godot
        with:
          sconsflags: ${{ env.SCONSFLAGS }} ${{ matrix.sconsflags }} arch=x86_64 ${{ matrix.build-mono && 'mono_prefix=$HOME/mono-installs/desktop-osx-x86_64-release' || '' }}
          platform: macos
          target: template_debug

      - name: Debug Template Compilation (arch=arm64, target=template_debug)
        uses: ./.github/actions/build-godot
        with:
          sconsflags: ${{ env.SCONSFLAGS }} ${{ matrix.sconsflags }} arch=arm64 ${{ matrix.build-mono && 'mono_prefix=$HOME/mono-installs/desktop-osx-x86_64-release' || '' }} debug_symbols=no
          platform: macos
          target: template_debug

      - name: Release Template Compilation (arch=x86_64, target=template_release)
        uses: ./.github/actions/build-godot
        with:
          sconsflags: ${{ env.SCONSFLAGS }} ${{ matrix.sconsflags }} arch=x86_64 ${{ matrix.build-mono && 'mono_prefix=$HOME/mono-installs/desktop-osx-arm64-release' || '' }}
          platform: macos
          target: template_release

      - name: Release template Compilation (arch=arm64, target=template_release)
        uses: ./.github/actions/build-godot
        with:
          sconsflags: ${{ env.SCONSFLAGS }} ${{ matrix.sconsflags }} arch=arm64 ${{ matrix.build-mono && 'mono_prefix=$HOME/mono-installs/desktop-osx-arm64-release' || '' }} debug_symbols=no
          platform: macos
          target: template_release

      # Create Mac Universal package
      - name: Package Templates (arch=arm64, x86_64)
        run: |
          ls -l bin/
          lipo -create bin/godot.macos.template_debug.x86_64 bin/godot.macos.template_debug.arm64 -output bin/godot.macos.template_debug.universal
          $STRIP bin/godot.macos.template_debug.universal
          lipo -create bin/godot.macos.template_release.x86_64 bin/godot.macos.template_release.arm64 -output bin/godot.macos.template_release.universal
          $STRIP bin/godot.macos.template_release.universal
          cp -r misc/dist/macos_template.app .
          mkdir -p bin/macos_template.app/Contents/MacOS
          cp bin/godot.macos.template_release.universal bin/macos_template.app/Contents/MacOS/godot_macos_release.universal
          cp bin/godot.macos.template_debug.universal bin/macos_template.app/Contents/MacOS/godot_macos_debug.universal
          chmod +x bin/macos_template.app/Contents/MacOS/godot_macos*
          zip -q -9 -r bin/macos.zip macos_template.app
          ls -l bin/

      - name: Upload Mac Template App
        uses: ./.github/actions/upload-artifact
        with:
          name: macos-template-app
          path: bin/macos.zip

      - name: Clear bin
        run: |
          rm -rf bin

      # Upload the Steam redistributable for packaging
      - name: Upload Linux Steam File
        uses: ./.github/actions/upload-steam-redistributable
        with:
          name: ${{ matrix.cache-name }}-steam
          path: osx/
          redist: libsteam_api.dylib